# -*- makefile -*- Time-stamp: <03/10/19 12:26:05 ptr>
# $Id: lib.mak,v 1.2 2008-02-26 14:59:42 bazis Exp $

DBG_SUFFIX := g
STLDBG_SUFFIX := stl${DBG_SUFFIX}

# Shared libraries:

ifdef STLP_BUILD_LIB_MOTIF
LIBNAME_BASE := ${LIBNAME}_${STLP_BUILD_LIB_MOTIF}
else
LIBNAME_BASE := ${LIBNAME}
endif

ifeq ($(OSNAME),darwin)
SO_NAME        := lib${LIBNAME_BASE}.$(SO)
SO_NAMEx       := lib${LIBNAME_BASE}.${MAJOR}.$(SO)
SO_NAMExx      := lib${LIBNAME_BASE}.${MAJOR}.${MINOR}.$(SO)
SO_NAMExxx     := lib${LIBNAME_BASE}.${MAJOR}.${MINOR}.${PATCH}.$(SO)
else
SO_NAME        := lib${LIBNAME_BASE}.$(SO)
SO_NAMEx       := ${SO_NAME}.${MAJOR}
SO_NAMExx      := ${SO_NAMEx}.${MINOR}
SO_NAMExxx     := ${SO_NAMExx}.${PATCH}
endif

SO_NAME_OUT    := $(OUTPUT_DIR)/${SO_NAME}
SO_NAME_OUTx   := $(OUTPUT_DIR)/${SO_NAMEx}
SO_NAME_OUTxx  := $(OUTPUT_DIR)/${SO_NAMExx}
SO_NAME_OUTxxx := $(OUTPUT_DIR)/${SO_NAMExxx}

ifdef STLP_BUILD_LIB_MOTIF
LIBNAME_DBG_BASE := ${LIBNAME}${DBG_SUFFIX}_${STLP_BUILD_LIB_MOTIF}
else
LIBNAME_DBG_BASE := ${LIBNAME}${DBG_SUFFIX}
endif

ifeq ($(OSNAME),darwin)
SO_NAME_DBG    := lib${LIBNAME_DBG_BASE}.$(SO)
SO_NAME_DBGx   := lib${LIBNAME_DBG_BASE}.${MAJOR}.$(SO)
SO_NAME_DBGxx  := lib${LIBNAME_DBG_BASE}.${MAJOR}.${MINOR}.$(SO)
SO_NAME_DBGxxx := lib${LIBNAME_DBG_BASE}.${MAJOR}.${MINOR}.${PATCH}.$(SO)
else
SO_NAME_DBG    := lib${LIBNAME_DBG_BASE}.$(SO)
SO_NAME_DBGx   := ${SO_NAME_DBG}.${MAJOR}
SO_NAME_DBGxx  := ${SO_NAME_DBGx}.${MINOR}
SO_NAME_DBGxxx := ${SO_NAME_DBGxx}.${PATCH}
endif

SO_NAME_OUT_DBG    := $(OUTPUT_DIR_DBG)/${SO_NAME_DBG}
SO_NAME_OUT_DBGx   := $(OUTPUT_DIR_DBG)/${SO_NAME_DBGx}
SO_NAME_OUT_DBGxx  := $(OUTPUT_DIR_DBG)/${SO_NAME_DBGxx}
SO_NAME_OUT_DBGxxx := $(OUTPUT_DIR_DBG)/${SO_NAME_DBGxxx}

ifdef STLP_BUILD_LIB_MOTIF
LIBNAME_STLDBG_BASE := ${LIBNAME}${STLDBG_SUFFIX}_${STLP_BUILD_LIB_MOTIF}
else
LIBNAME_STLDBG_BASE := ${LIBNAME}${STLDBG_SUFFIX}
endif

ifeq ($(OSNAME),darwin)
SO_NAME_STLDBG    := lib${LIBNAME_STLDBG_BASE}.$(SO)
SO_NAME_STLDBGx   := lib${LIBNAME_STLDBG_BASE}.${MAJOR}.$(SO)
SO_NAME_STLDBGxx  := lib${LIBNAME_STLDBG_BASE}.${MAJOR}.${MINOR}.$(SO)
SO_NAME_STLDBGxxx := lib${LIBNAME_STLDBG_BASE}.${MAJOR}.${MINOR}.${PATCH}.$(SO)
else
SO_NAME_STLDBG    := lib${LIBNAME_STLDBG_BASE}.$(SO)
SO_NAME_STLDBGx   := ${SO_NAME_STLDBG}.${MAJOR}
SO_NAME_STLDBGxx  := ${SO_NAME_STLDBGx}.${MINOR}
SO_NAME_STLDBGxxx := ${SO_NAME_STLDBGxx}.${PATCH}
endif

SO_NAME_OUT_STLDBG    := $(OUTPUT_DIR_STLDBG)/${SO_NAME_STLDBG}
SO_NAME_OUT_STLDBGx   := $(OUTPUT_DIR_STLDBG)/${SO_NAME_STLDBGx}
SO_NAME_OUT_STLDBGxx  := $(OUTPUT_DIR_STLDBG)/${SO_NAME_STLDBGxx}
SO_NAME_OUT_STLDBGxxx := $(OUTPUT_DIR_STLDBG)/${SO_NAME_STLDBGxxx}

# Static libraries:

A_NAME := lib${LIBNAME_BASE}.$(ARCH)
A_NAME_OUT := $(OUTPUT_DIR_A)/$(A_NAME)

A_NAME_DBG := lib${LIBNAME_DBG_BASE}.$(ARCH)
A_NAME_OUT_DBG := $(OUTPUT_DIR_A_DBG)/$(A_NAME_DBG)

A_NAME_STLDBG := lib${LIBNAME_STLDBG_BASE}.$(ARCH)
A_NAME_OUT_STLDBG := $(OUTPUT_DIR_A_STLDBG)/$(A_NAME_STLDBG)
